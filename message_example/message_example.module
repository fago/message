<?php

/**
 * @file
 * Message example.
 */

/**
 * Implements hook_node_insert().
 */
function message_example_node_insert($node) {
  global $user;
  // Set the arguments that would be replaced on run-time.
  $arguments = array(
    // The link will be replaced with the url of the node using url() upon
    // display. Even if the node alias changes, then the link will always be
    // displayed correctly.
    '@url' => array(
      'callback' => 'url',
      'callback arguments' => array('node/' . $node->nid),
    ),
    // The title of the node will be sanitized using check_plain() upon
    // display. We hard code the title to prevent a node load, but if the
    // node's title will change it will not be reflected in the message.
    // see message_example_comment() for an example of using a callback to get
    // the most up-to-date title.
    '@title' => $node->title,

    // Add the teaser argument. The teaser may contain HTML, so we make sure
    // it's not escaped by prefixing the argument with the "!" sign.
    '!teaser' => array(
      'callback' => 'message_example_node_view_teaser',
      'callback arguments' => array($node->nid),
    ),
  );

  // Save the message and assign it to the user realm. Since another user,
  // usually an admin might create the node, but populate the author field
  // with another user, we make sure the user realm is populated with the
  // node's author, instead of the acting user (although in most cases it
  // would be the same user).
  // The following example demonstrates that we don't need to explicetly set
  // the realm to the user, since if no realms are provided then the message
  // is automatically assigned to the user passed in the function, or if no
  // user object is provided, then to the acting user.
  $account = user_load($node->uid);

  $values = array(
    'arguments' => $arguments,
    // Save reference to the node in the node reference field.
    'field_node_ref' => array(LANGUAGE_NONE => array(array('nid' => $node->nid))),
  );

  $message = message_create('create_content', $values, $account)->save();
}

/**
 * Implementation of hook_default_message_type().
 */
function message_example_default_message_type() {
  $items = array();
  $items['create_content'] = entity_import('message_type', '{
    "name" : "create_content",
    "category" : "message_type",
    "description" : "Create content",
    "statusKey" : "status",
    "argument_keys" : [ "@url @title" ],
    "message_text" : { "und" : [
        {
          "value" : "created \u003ca href=\"@url\"\u003e@title\u003c\/a\u003e",
          "format" : "filtered_html",
          "safe_value" : "\u003cp\u003ecreated \u003ca href=\"@url\"\u003e@title\u003c\/a\u003e\u003c\/p\u003e\n"
        }
      ]
    },
    "rdf_mapping" : []
  }');
  return $items;
}
